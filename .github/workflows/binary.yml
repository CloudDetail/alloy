name: Build Binary

on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Generate App Version
      run: |
        TAG=$(git describe --tags --exact-match 2>/dev/null || echo "")
        if [ -n "$TAG" ]; then
          echo "APP_VERSION=$TAG" >> $GITHUB_ENV
        else
          BRANCH=$(git rev-parse --abbrev-ref HEAD | sed 's#[^a-zA-Z0-9._-]#-#g')
          COMMIT=$(git rev-parse --short HEAD)
          echo "APP_VERSION=${BRANCH}-${COMMIT}" >> $GITHUB_ENV
        fi

    - name: Build alloy Binary
      run: |
        docker run -v ${{ github.workspace }}:/workspace -w /workspace grafana/alloy-build-image:v0.1.6 /bin/bash -c "
          make dist/alloy-linux-amd64
          "
        tar -zczf alloy.tar.gz dist

    - name: Upload to OSS
      env:
        OSS_ACCESS_KEY_ID: ${{ secrets.OSS_ACCESS_KEY_ID }}
        OSS_ACCESS_KEY_SECRET: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
        OSS_BUCKET: apo-oss
        OSS_ENDPOINT: https://oss-cn-hangzhou.aliyuncs.com/
      run: |
        curl https://gosspublic.alicdn.com/ossutil/install.sh | sudo bash
        sudo ossutil config -e $OSS_ENDPOINT -i $OSS_ACCESS_KEY_ID -k $OSS_ACCESS_KEY_SECRET -L CH -c /root/.ossutilconfig
        sudo ossutil cp alloy.tar.gz oss://$OSS_BUCKET/alloy-linux-amd64-${{ env.APP_VERSION }}.tar.gz